import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'com.bosh.component.library'
//apply plugin: 'com.tencent.tinker.patch'

static def getGitVersion() {
    try {
        return 'git rev-parse --short HEAD'.execute().text.trim()
    } catch (Throwable th) {
        th.printStackTrace()
        return ""
    }
}

static def getBuildTime() {
    Date date = new Date()
    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyyMMddHHmmss")
    return simpleDateFormat.format(date)
}


android {
    compileSdkVersion build_version.compileSdkVersion
    buildToolsVersion build_version.buildToolsVersion
    defaultConfig {
        applicationId "com.china.bosh.demo"
        minSdkVersion build_version.minSdkVersion
        targetSdkVersion build_version.targetSdkVersion
        versionCode build_version.versionCode
        versionName build_version.versionName
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters "armeabi-v7a"
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

        resConfigs 'zh', 'en'
        resourcePrefix 'app_'
    }

    packagingOptions {
        exclude 'org/apache/commons/codec/language/bm/gen_approx_greeklatin.txt'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError true
        warningsAsErrors false
        ignore "IconDensities","Overdraw", "NonConstantResourceId"
    }

    applicationVariants.all {
        variant ->
            variant.outputs.all { output ->
//                outputFileName = "demo_${variant.productFlavors[0].name}_v${variant.versionName}-${getBuildTime()}-${getGitVersion()}.apk"
                outputFileName = "demo_v${variant.versionName}-${getBuildTime()}-${getGitVersion()}.apk"
            }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.13.1'
    implementation androidx.appcompat
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation libs.material
    androidTestImplementation androidx.runner
    androidTestImplementation androidx.espresso_core
    if (isModule.toBoolean()) {
//        implementation project(':mylibrary')
    } else {
//        api 'com.bosh.demo:library:0.0.10'
        implementation project(':module_demo')
        implementation project(':module_kotlin')
        implementation project(':module_mvp')
        implementation project(':module_mvvm')
//        api 'com.bosh.demo:moduledemo:0.0.5'
    }

    api libs.butterknife
    annotationProcessor libs.butterknife_compiler

    annotationProcessor libs.arouter_compiler

    //optional, help to generate the final application
//    annotationProcessor('com.tencent.tinker:tinker-android-anno:1.9.1')
    //tinker's main Android lib
//    api('com.tencent.tinker:tinker-android-lib:1.9.1')

//    debugImplementation('com.squareup.leakcanary:leakcanary-android:2.2')
}

config {
    enableRestrictToTransform false
}
